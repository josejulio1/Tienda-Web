@startuml
!theme vibrant

AbstractActiveRecord <|-- AbstractActiveRecordCrud
AbstractActiveRecordCrud <|- AbstractActiveRecordCrudAuth

AbstractActiveRecord <|-- VCarritoCliente
AbstractActiveRecord <|-- VPedido
AbstractActiveRecord <|-- VPedidoProductoItemDetallado
AbstractActiveRecord <|-- VChatClienteInfo
AbstractActiveRecord <|-- VComentarioClienteProducto
AbstractActiveRecord <|-- VProductoCategoria
AbstractActiveRecord <|-- VProductoValoracionPromedio

AbstractActiveRecordCrudAuth <|--- Usuario
AbstractActiveRecordCrudAuth <|--- Cliente
AbstractActiveRecordCrudAuth <|--- VUsuarioRol

AbstractActiveRecordCrud <|-- Rol
AbstractActiveRecordCrud <|-- Categoria
AbstractActiveRecordCrud <|-- Producto
AbstractActiveRecordCrud <|-- Marca
AbstractActiveRecordCrud <|-- CarritoItem
AbstractActiveRecordCrud <|-- Pedido
AbstractActiveRecordCrud <|-- PedidoProductoItem
AbstractActiveRecordCrud <|-- Chat
AbstractActiveRecordCrud <|-- Comentario
AbstractActiveRecordCrud <|-- EstadoPago
AbstractActiveRecordCrud <|-- MetodoPago

IContainsImage <.. Producto
IContainsImage <.. Usuario

abstract class AbstractActiveRecord {
    # tableName: string {static}
    # primaryKeyColumn: string {static}

    + all($columns = []: array, ?$limit = null: int, $order = []: array): array {static}
    + find($id: int, $columns = []: array, ?$otherPrimaryKey = null, $order = []: array): array|null {static}
    + findOne($id: int, $columns = []: array, ?$otherPrimaryKey = null, $order = []: array): static|null {static}
    + last($columns = []: array): static|null {static}
    # mapResultToObject($result: array): array {static}
}

abstract class AbstractActiveRecordCrud {
    + create($removePrimaryKeyColumn = true: bool): bool
    + save(): bool
    + delete(): bool
    + getColumns(): array {abstract}
}

abstract class AbstractActiveRecordCrudAuth {
    # emailColumn: string {static}
    + findByEmail($id: int, $columns = []: array): static|null {static}
}

interface IContainsImage {
    + getImagePath(): string
}

class Usuario {
    + ID {static}
    + USUARIO {static}
    + CORREO {static}
    + CONTRASENIA {static}
    + ROL_ID {static}
    + RUTA_IMAGEN_PERFIL {static}

    + id: int
    + usuario: string
    + correo: string
    + contrasenia: string
    + rol_id: int
    + ruta_imagen_perfil: string
}

class Cliente {
    + ID {static}
    + NOMBRE {static}
    + APELLIDOS {static}
    + TELEFONO {static}
    + DIRECCION {static}
    + CORREO {static}
    + CONTRASENIA {static}
    + RUTA_IMAGEN_PERFIL {static}

    + id: int
    + nombre: string
    + apellidos: string
    + telefono: string
    + direccion: string
    + correo: string
    + contrasenia: string
    + ruta_imagen_perfil: string
}

class Rol {
    + ID {static}
    + NOMBRE {static}
    + COLOR {static}
    + PERMISO_CATEGORIA {static}
    + PERMISO_PRODUCTO {static}
    + PERMISO_MARCA {static}
    + PERMISO_CLIENTE {static}
    + PERMISO_USUARIO {static}
    + PERMISO_ROL {static}

    + id: int
    + nombre: string
    + color: string
    + permiso_categoria: int
    + permiso_producto: int
    + permiso_marca: int
    + permiso_cliente: int
    + permiso_usuario: int
    + permiso_rol: int
}

class Producto {
    + ID {static}
    + NOMBRE {static}
    + DESCRIPCION {static}
    + PRECIO {static}
    + STOCK {static}
    + RUTA_IMAGEN {static}
    + MARCA_ID {static}
    + CATEGORIA_ID {static}

    + id: int
    + nombre: string
    + descripcion: string
    + precio: float
    + stock: int
    + ruta_imagen: string
    + marca_id: int
    + categoria_id: int
}

class Categoria {
    + ID {static}
    + NOMBRE {static}

    + id: int
    + nombre: string
}

class Marca {
    + ID {static}
    + NOMBRE {static}

    + id: int
    + nombre: string
}

class Pedido {
    + ID {static}
    + CLIENTE_ID {static}
    + METODO_PAGO_ID {static}
    + ESTADO_PAGO_ID {static}
    + DIRECCION_ENVIO {static}

    + id: int
    + cliente_id: int
    + metodo_pago_id: int
    + estado_pago_id: int
    + direccion_envio: string
}

class PedidoProductoItem {
    + ID {static}
    + PEDIDO_ID {static}
    + PRODUCTO_ID {static}
    + CANTIDAD_PRODUCTO {static}
    + PRECIO_PRODUCTO {static}

    + id: int
    + pedido_id: int
    + producto_id: int
    + cantidad_producto: int
    + precio_producto: float
}

class CarritoItem {
    + PRODUCTO_ID {static}
    + CLIENTE_ID {static}
    + CANTIDAD {static}

    + producto_id: int
    + cliente_id: int
    + cantidad: int

    + emptyCart($customerId: int): bool {static}
    + setQuantity($productId: int, $quantity: int): bool {static}
    + operationQuantity($productId: int, $increment: bool): bool {static}
    + findQuantityByProductIdAndCustomer($productId: int, $columns = []: array): CarritoItem|null
    + deleteItem(): bool
}

class Chat {
    + ID {static}
    + CLIENTE_ID {static}
    + MENSAJE {static}
    + FECHA {static}
    + ES_CLIENTE {static}

    + id: int
    + cliente_id: int
    + mensaje: string
    + fecha: string
    + es_cliente: bool
}

class Comentario {
    + ID {static}
    + CLIENTE_ID {static}
    + PRODUCTO_ID {static}
    + COMENTARIO {static}
    + NUM_ESTRELLAS {static}
    + FECHA_HORA_COMENTARIO {static}

    + id: int
    + cliente_id: int
    + producto_id: int
    + comentario: string
    + num_estrellas: int
    + fecha_hora_comentario: string
}

class EstadoPago {
    + ID {static}
    + NOMBRE {static}

    + id: int
    + nombre: string
}

class MetodoPago {
    + ID {static}
    + NOMBRE {static}

    + id: int
    + nombre: string
}

class VUsuarioRol {
    + USUARIO_ID {static}
    + USUARIO {static}
    + CORREO {static}
    + CONTRASENIA {static}
    + ROL_ID {static}
    + NOMBRE_ROL {static}
    + COLOR_ROL {static}
    + RUTA_IMAGEN_PERFIL {static}
    + PERMISO_CATEGORIA {static}
    + PERMISO_PRODUCTO {static}
    + PERMISO_MARCA {static}
    + PERMISO_CLIENTE {static}
    + PERMISO_USUARIO {static}
    + PERMISO_ROL {static}

    + usuario_id: int
    + usuario: string
    + correo: string
    + contrasenia: string
    + rol_id: int
    + nombre_rol: string
    + color_rol: string
    + ruta_imagen_perfil: string
    + permiso_categoria: int
    + permiso_producto: int
    + permiso_marca: int
    + permiso_cliente: int
    + permiso_usuario: int
    + permiso_rol: int
}

class VCarritoCliente {
    + CLIENTE_ID {static}
    + PRODUCTO_ID {static}
    + NOMBRE_PRODUCTO {static}
    + PRECIO_PRODUCTO {static}
    + CANTIDAD {static}
    + RUTA_IMAGEN_PERFIL {static}

    + cliente_id: int
    + producto_id: int
    + nombre_productp: string
    + precio_producto: int
    + cantidad: int
    + ruta_imagen_perfil: string

    + findByProductId($productId: int, $columns = []: array): VCarritoCliente|null {static}
}

class VPedido {
    + ID {static}
    + CLIENTE_ID {static}
    + NOMBRE_PRODUCTO {static}
    + METODO_PAGO {static}
    + ESTADO_PAGO {static}
    + DIRECCION_ENVIO {static}

    + id: int
    + cliente_id: int
    + nombre_producto: string
    + metodo_pago: string
    + estado_pago: string
    + direccion_envio: string
}

class VPedidoProductoItemDetallado {
    + PEDIDO_ID {static}
    + CLIENTE_ID {static}
    + PRODUCTO_ID {static}
    + NOMBRE_PRODUCTO {static}
    + CANTIDAD_PRODUCTO {static}
    + PRECIO_PRODUCTO {static}
    + RUTA_IMAGEN {static}

    + pedido_id: int
    + cliente_id: int
    + producto_id: int
    + nombre_producto: string
    + cantidad_producto: int
    + precio_producto: float
    + ruta_imagen: string
}

class VChatClienteInfo {
    + ID {static}
    + CLIENTE_ID {static}
    + RUTA_IMAGEN_PERFIL {static}
    + MENSAJE {static}
    + FECHA {static}
    + ES_CLIENTE {static}

    + id: int
    + cliente_id: int
    + ruta_imagen_perfil: string
    + mensaje: string
    + fecha: string
    + es_cliente: bool
}

class VComentarioClienteProducto {
    + PRODUCTO_ID {static}
    + NOMBRE_CLIENTE {static}
    + APELLIDOS_CLIENTE {static}
    + RUTA_IMAGEN_PERFIL {static}
    + COMENTARIO {static}
    + NUM_ESTRELLAS {static}

    + producto_id: int
    + cliente_id: int
    + nombre_cliente: string
    + apellidos_cliente: string
    + ruta_imagen_perfil: string
    + comentario: string
    + num_estrellas: int
    + fecha_hora_comentario: string

    + customerHasCommentedInProduct(productId: int): bool {static}
    + lastCustomerCommentInProduct(productId: int, columns = []: array): VComentarioClienteProducto|null {static}
}

class VProductoCategoria {
    + PRODUCTO_ID {static}
    + NOMBRE {static}
    + DESCRIPCION {static}
    + PRECIO {static}
    + MARCA {static}
    + STOCK {static}
    + RUTA_IMAGEN {static}
    + NOMBRE_CATEGORIA {static}

    + producto_id: int
    + nombre: string
    + descripcion: string
    + precio: float
    + marca: string
    + stock: int
    + ruta_imagen: string
    + nombre_categoria: string
}

class VProductoValoracionPromedio {
    + ID {static}
    + NOMBRE {static}
    + DESCRIPCION {static}
    + RUTA_IMAGEN {static}
    + PRECIO {static}
    + MARCA {static}
    + VALORACION_PROMEDIO {static}

    + id: int
    + nombre: string
    + descripcion: string
    + ruta_imagen: string
    + precio: float
    + marca: string
    + valoracion_promedio: int

    + findBeginWithName(productName: string, $columns = []: array): array|null {static}
}

@enduml